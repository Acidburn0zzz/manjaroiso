#!/bin/sh

# kernel_cmdline <param> <default>
# Looks for a parameter on the kernel's boot-time command line.
#
# returns: 0 if param was found. Also prints its value if it was a K=V param.
#          1 if it was not. Also prints value passed as <default>
#
kernel_cmdline ()
{
    for param in $(/bin/cat /proc/cmdline); do
        case "${param}" in
            $1=*) echo "${param##*=}"; return 0 ;;
            $1) return 0 ;;
            *) continue ;;
        esac
    done
    [ -n "${2}" ] && echo "${2}"
    return 1
}

LOCALE="$(kernel_cmdline locale.LANG en_US.UTF-8)"
TIMEZONE="$(kernel_cmdline timezone UTC)"
KEYMAP="$(kernel_cmdline vconsole.keymap us)"
CONSOLEFONT="$(kernel_cmdline vconsole.font)"
CONSOLEMAP="$(kernel_cmdline vconsole.font.map)"

## Systemd should do it
#scan_swap
#swapdev="$(fdisk -l 2>/dev/null | grep swap | cut -d' ' -f1)"
#if [ -e "${swapdev}" ]; then
#	swapon ${swapdev}
#	echo "${swapdev} swap swap defaults 0 0 #configured by archiso" >>/etc/fstab
#fi

#prepare_locale_gen
sed -i "s/#\(${LOCALE}\)/\1/" /etc/locale.gen
/usr/sbin/locale-gen > /dev/null

#set_timezone
ln -sf "/usr/share/zoneinfo/${TIMEZONE}" /etc/localtime  

#set_alsa
	# amixer binary
	local alsa_amixer="/usr/bin/amixer"

	# enable all known (tm) outputs
	$alsa_amixer -c 0 sset "Master" 70% unmute &>/dev/null
	$alsa_amixer -c 0 sset "Front" 70% unmute &>/dev/null
	$alsa_amixer -c 0 sset "Side" 70% unmute &>/dev/null
	$alsa_amixer -c 0 sset "Surround" 70% unmute &>/dev/null
	$alsa_amixer -c 0 sset "Center" 70% unmute &>/dev/null
	$alsa_amixer -c 0 sset "LFE" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "Headphone" 70% unmute &>/dev/null
	$alsa_amixer -c 0 sset "Speaker" 70% unmute &>/dev/null
	$alsa_amixer -c 0 sset "PCM" 70% unmute &>/dev/null
	$alsa_amixer -c 0 sset "Line" 70% unmute &>/dev/null
	$alsa_amixer -c 0 sset "External" 70% unmute &>/dev/null
	$alsa_amixer -c 0 sset "FM" 50% unmute &> /dev/null
	$alsa_amixer -c 0 sset "Master Mono" 70% unmute &>/dev/null
	$alsa_amixer -c 0 sset "Master Digital" 70% unmute &>/dev/null
	$alsa_amixer -c 0 sset "Analog Mix" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "Aux" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "Aux2" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "PCM Center" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "PCM Front" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "PCM LFE" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "PCM Side" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "PCM Surround" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "Playback" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "PCM,1" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "DAC" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "DAC,0" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "DAC,0" -12dB &> /dev/null
	$alsa_amixer -c 0 sset "DAC,1" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "DAC,1" -12dB &> /dev/null
	$alsa_amixer -c 0 sset "Synth" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "CD" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "Wave" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "Music" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "AC97" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "Analog Front" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "VIA DXS,0" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "VIA DXS,1" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "VIA DXS,2" 70% unmute &> /dev/null
	$alsa_amixer -c 0 sset "VIA DXS,3" 70% unmute &> /dev/null

	# set input levels
	$alsa_amixer -c 0 sset "Mic" 70% mute &>/dev/null
	$alsa_amixer -c 0 sset "IEC958" 70% mute &>/dev/null

	# special stuff
	$alsa_amixer -c 0 sset "Master Playback Switch" on &>/dev/null
	$alsa_amixer -c 0 sset "Master Surround" on &>/dev/null
	$alsa_amixer -c 0 sset "SB Live Analog/Digital Output Jack" off &>/dev/null
	$alsa_amixer -c 0 sset "Audigy Analog/Digital Output Jack" off &>/dev/null

	# save settings
	alsactl -f /etc/asound.state store &>/dev/null

## Wait for the last mhwd binary
#hwdetect_graphics
#local USENONFREE="$(kernel_cmdline nonfree no)"
#
#if  [ "${USENONFREE}" == "yes" ] || [ "${USENONFREE}" == "true" ]; then
#	/usr/bin/mhwd -c 0300 -nf
#else
#	/usr/bin/mhwd -c 0300
#fi	

#do_makeuser
addgroups="video,audio,power,disk,storage,optical,network,lp"
useradd -m -p "" -g users -G $addgroups manjaro
sed -i "s#manjaro.*#manjaro:\$1\$uYIrxnwJ\$a5wTa84YxxYmD.sKX/Lll1:14942:0:99999:7:::#" /etc/shadow

#do_fix_perms
chown root:root /etc/sudoers
chmod 440 /etc/sudoers

#do_lang_settings
 	# Determind which language we are using
	if [ "$(echo "${LOCALE}" | grep "de_")" != "" ]; then
		# Setup system for the German language
		
		# Set German Xorg keyboard layout
		sed -i 's#Identifier "evdev keyboard catchall".*#&\n        Option "XkbLayout" "de"\n        Option "XkbVariant" "nodeadkeys"#' /etc/X11/xorg.conf.d/10-evdev.conf


	elif [ "$(echo "${LOCALE}" | grep "fr_")" != "" ]; then
		# Setup system for the French language
		
		# Set French Xorg keyboard layout
		sed -i 's#Identifier "evdev keyboard catchall".*#&\n        Option "XkbLayout" "fr"#'       /etc/X11/xorg.conf.d/10-evdev.conf
	fi
